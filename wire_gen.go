// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/gin-gonic/gin"
	"golang-block-chain/repositories"
	"golang-block-chain/services"
	"golang-block-chain/services/contexts"
	"golang-block-chain/web/controllers"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitApp(db *gorm.DB, webEngine *gin.Engine) *App {
	block := &services.Block{}
	blockFactory := _wireBlockFactoryValue
	transactionFactory := _wireTransactionFactoryValue
	contextsBlockFactory := &contexts.BlockFactory{
		DB:                     db,
		BlockRepoFactory:       blockFactory,
		TransactionRepoFactory: transactionFactory,
	}
	controllersBlock := &controllers.Block{
		Service:    block,
		CtxFactory: contextsBlockFactory,
	}
	transaction := &controllers.Transaction{
		Service:    block,
		CtxFactory: contextsBlockFactory,
	}
	web := Web{
		Block:       controllersBlock,
		Transaction: transaction,
	}
	app := &App{
		Web:       web,
		DB:        db,
		WebEngine: webEngine,
	}
	return app
}

var (
	_wireBlockFactoryValue       = repositories.BlockFactory(repositories.NewBlock)
	_wireTransactionFactoryValue = repositories.TransactionFactory(repositories.NewTransaction)
)
