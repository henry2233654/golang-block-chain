// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/blocks": {
            "get": {
                "description": "ListBlocks blocks by list parameters",
                "tags": [
                    "Block"
                ],
                "summary": "ListBlocks Blocks",
                "operationId": "list-blocks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/viewmodels.ListBlocks"
                        }
                    },
                    "500": {
                        "description": "Internal error.",
                        "schema": {
                            "$ref": "#/definitions/viewmodels.Error"
                        }
                    }
                }
            }
        },
        "/blocks/{block_num}": {
            "get": {
                "description": "Get block by block number",
                "tags": [
                    "Block"
                ],
                "summary": "Get Block",
                "operationId": "get-block",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Block Number",
                        "name": "block_num",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/viewmodels.GetSingleBlock"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/viewmodels.Error"
                        }
                    },
                    "500": {
                        "description": "Internal error.",
                        "schema": {
                            "$ref": "#/definitions/viewmodels.Error"
                        }
                    }
                }
            }
        },
        "/transaction/{tx_hash}": {
            "get": {
                "description": "GetBlock block by block number",
                "tags": [
                    "Transaction"
                ],
                "summary": "Get Transaction",
                "operationId": "get-transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "transaction hash",
                        "name": "tx_hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/viewmodels.GetTransaction"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/viewmodels.Error"
                        }
                    },
                    "500": {
                        "description": "Internal error.",
                        "schema": {
                            "$ref": "#/definitions/viewmodels.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "inputmodels.ListBlocksParam": {
            "type": "object",
            "properties": {
                "limit": {
                    "description": "Limit",
                    "type": "integer"
                }
            }
        },
        "viewmodels.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {
                    "type": "object"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "viewmodels.GetSingleBlock": {
            "type": "object",
            "properties": {
                "block_hash": {
                    "type": "string"
                },
                "block_num": {
                    "type": "integer"
                },
                "block_time": {
                    "type": "string"
                },
                "parent_hash": {
                    "type": "string"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "viewmodels.GetTransaction": {
            "type": "object",
            "properties": {
                "block_hash": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/viewmodels.TransactionLog"
                    }
                },
                "nonce": {
                    "type": "integer"
                },
                "to": {
                    "type": "string"
                },
                "tx_hash": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "viewmodels.ListBlockItem": {
            "type": "object",
            "properties": {
                "block_hash": {
                    "type": "string"
                },
                "block_num": {
                    "type": "integer"
                },
                "block_time": {
                    "type": "string"
                },
                "parent_hash": {
                    "type": "string"
                }
            }
        },
        "viewmodels.ListBlocks": {
            "type": "object",
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/viewmodels.ListBlockItem"
                    }
                }
            }
        },
        "viewmodels.TransactionLog": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "tx_hash": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "System Main Data",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
